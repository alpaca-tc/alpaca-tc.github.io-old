---
layout: post
title: Vim中級者を脱する スコープ編
date: 2013-11-13 17:26
comments: true
categories: vim
---

vimで一番ハマったのが**スコープの問題**でした。

Vimのスコープの理解がなぁなぁな、あなた。

よく登場しそうなスコープだけでも理解してみましょう。

# よく見るスコープ一覧

- *グローバル*スコープ　`g:`
- *関数内*スコープ　`a:`
- *スクリプト*スコープ　`s:`
- *バッファ*スコープ　`b:`
- *接頭辞なし*　`let huga=...`など

## グローバル(g:)スコープ

**どこからでも参照できます。**

プラグインの設定で見慣れたスコープですね。

`let g:neocomplete#enable_at_startup = 1`

変数を初期化するには、次のようにします。
大量のエラーコードによって操作できなくなるので、**嫌いな人のvimrcの末尾に書き込んでください。**

```vim
for key in keys(g:)
  execute 'unlet g:' . key
endfor
```


## 関数内(a:)スコープ

**関数内で、引数を参照するときに使用するスコープ**

個人的に一番理解しがたいスコープです。

こんな感じで使います。他言語から移ってきた人には、正直使いづらい。

```
function! Huga(first, second)
  echo a:
  "=> {'0': 0, '000': [], 'second': 'b', 'first': 'a', 'firstline': 5, 'lastline': 5}
  echo a:first
  "=> 'b'
endfunction

call Huga('a', 'b')
```

あーなるほど、**関数内でだけ有効なスコープなのか。**

と思っていたらそれも*間違い*。


下記のようにすると、**グローバルなスコープとして参照できます。**

```
function! a:huga()
  echo 'Global!?!?!?'
endfunction

call a:huga() " => Global!?!?!?
```

けれど、`echo a:`は動かない。

僕には真実が分からない。

## スクリプト(s:)スコープ

**ファイル内でのみ有効なスコープ**です。

プラグインで、プライベートなメソッドや定数を作るときによく使います。

```
let s:script_scope = '外部からは参照できない'
function! s:script_scope_method()
  " プライベートメソッドとしてよく使われる
endfunction
```

この`s:`は、スクリプトがsourceされるときに置き換えられ、`<SNR>1_...`という感じの形になります。

えぇ、そうです。すると、**グローバルなスコープとして参照できます。**

この`<SNR>`の後にどの数値が割り振られているかは、`:scriptnames`で参照できます。


また、`s:`は`<SID>`として使えばスコープを超えて使用できるようになります。

マッピングの時に、scriptスコープを使う時などは必須ですね。

```vim
nnoremap s :echo <SID>SID()<CR>
```

ただし、*変数は基本的には聖域*です。

## バッファ(b:)スコープ

**バッファ単位のスコープ**です。

ファイルタイプによる設定や、一時バッファによる変数などに使います。

- ファイルタイプの変更で、`b:current_syntax`などが初期化&格納されます
- Uniteを起動で、`b:unite`にデータが格納されます。

Uniteのデバッグするときには、`echo b:unite.candidates`などを参照しましょう。

あぁ、ようやくまともなスコープだ。

## 接頭辞なし(`let huga=`)変数

えぇ。**グローバルなスコープです。**

お前もか！


マナーとしては、やはり`g:`で宣言したいところですが、

Vimにデフォルトで入っているプラグインは、容赦なくこの変数を使ってきます。

`:echo loaded_*<Tab>`などすれば、奴らを見つけられるはずです。

細かいことを言えば、関数内ならばローカルスコープです。。。


## スコープのまとめ

- スコープは**ほとんどグローバルで参照できる**
- VimLは枠にハマらない**素敵な**言語仕様を持っている
- getbufvar()などでスコープへアクセス出来るため、**聖域はほとんど無い**


**正直今でも理解出来ていない。**
